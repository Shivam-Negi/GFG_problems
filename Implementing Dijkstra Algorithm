class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int N, vector<vector<int>> adj[], int S)
    {
        vector <int> vis(N, 0);
	    vector <int> dist(N, 1e9);
	    set <pair<int, int> > st;    //  < wt, node >
    
	    st.insert({0, S});
	    dist[S] = 0;
    
	    while(st.size() > 0){
	    	auto node = *st.begin();   /* first element
	    								(min distance from source)*/ 
	    	int v = node.second;
	    	int v_dist = node.first;
    
	    	st.erase(st.begin());
    
	    	if(vis[v])
	    		continue;
    
	    	vis[v] = 1;
    
	    	for(auto child : adj[v]){
	    		int child_v = child[0];
	    		int wt = child[1];
	    		if(dist[v] + wt < dist[child_v]){
	    			dist[child_v] = dist[v] + wt;
	    			st.insert({dist[child_v], child_v});
	    		}
	    	}
	    }
	    return dist;
    }
};
